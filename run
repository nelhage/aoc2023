#!/usr/bin/env python
import subprocess
import os
import argparse
import shlex
from pathlib import Path

HERE = Path(__file__).parent
OUT = HERE/'out'

CXXFLAGS = [
  '-std=c++20',
  '-fbracket-depth=25000',
  '-I',
  HERE/'include',
]

def check_call(echo, cmd, **kwargs):
  if echo:
    print(f"+ ", shlex.join(map(str, cmd)))
  return subprocess.check_call(cmd, **kwargs)

def main():
  parser = argparse.ArgumentParser()
  parser.add_argument("program")
  parser.add_argument("input")

  parser.add_argument("--echo",
                      action='store_true',
                      default=bool(os.getenv('ECHO')))

  args = parser.parse_args()

  OUT.mkdir(exist_ok=True, parents=True)

  input = Path(args.input).absolute()

  input_i = OUT / Path(input).relative_to(HERE).with_suffix(".i")
  input_i.parent.mkdir(exist_ok=True, parents=True)

  src = Path(args.program).absolute()

  out_bin = (OUT / Path(src).relative_to(HERE)).with_suffix("")
  out_bin.parent.mkdir(exist_ok=True, parents=True)

  with open(args.input, 'rb') as fin:
    with open(input_i, 'wb') as fout:
      check_call(args.echo,
                 ['xxd', '-i'], stdin=fin, stdout=fout)

  check_call(args.echo, [
    'c++', '-o', out_bin, src, '-D', f"INPUT={input_i}",
    ] + CXXFLAGS)

  subprocess.check_call([out_bin])

if __name__ == '__main__':
  main()
